name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install hadolint
        run: |
          curl -sSfL https://raw.githubusercontent.com/hadolint/hadolint/master/install | bash -s -- -b /usr/local/bin
          chmod +x /usr/local/bin/hadolint
      
      - name: Run hadolint
        run: hadolint Dockerfile*
      
      - name: Install yamllint
        run: |
          sudo apt-get update
          sudo apt-get install -y yamllint
      
      - name: Run yamllint
        run: yamllint -c .yamllint.yml .

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and test
        run: |
          docker-compose -f docker-compose.test.yml build
          docker-compose -f docker-compose.test.yml up -d
          sleep 30
          curl -s http://localhost:5601/api/status || exit 1
          docker-compose -f docker-compose.test.yml down

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/elk-stack:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/elk-stack:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 