name: ELK Stack CI/CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'ELK/**'
  pull_request:
    branches: [main]
    paths:
      - 'ELK/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ELK
    steps:
      - uses: actions/checkout@v3
      - name: Install yamllint
        run: |
          sudo apt-get update
          sudo apt-get install -y yamllint
      - name: Run yamllint
        run: |
          find . -type f -name "*.yml" -not -name ".yamllint.yml" -not -name "ci-cd.yml" -not -path "*/backup_*/*" -exec yamllint -c .yamllint.yml {} +

  test:
    runs-on: ubuntu-latest
    needs: lint
    defaults:
      run:
        working-directory: ELK
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin
      - name: Create test network
        run: docker network create elk_test || true
      - name: Build and test
        run: |
          docker compose -f docker-compose.test.yml build
          docker compose -f docker-compose.test.yml up -d
          sleep 30
          curl -s http://localhost:5601/api/status || exit 1
          docker compose -f docker-compose.test.yml down
